;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name mind.core, :imports nil, :requires {views mind.views, mind.views mind.views, routes mind.routes, mind.routes mind.routes, mind.subs mind.subs, mind.handlers mind.handlers, re-frame.core re-frame.core, reagent.core reagent.core, reagent reagent.core}, :uses nil, :defs {init {:protocol-inline nil, :meta {:arglists (quote ([])), :export true, :end-column 20, :end-line 14, :column 16, :line 14, :file "/home/fricze/Work/mind/src/cljs/mind/core.cljs"}, :name mind.core/init, :variadic false, :file "src/cljs/mind/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, mount-root {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 9, :column 7, :line 9, :file "/home/fricze/Work/mind/src/cljs/mind/core.cljs"}, :name mind.core/mount-root, :variadic false, :file "src/cljs/mind/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:initialize-db], :seen #{:initialize-db}}, :doc nil}